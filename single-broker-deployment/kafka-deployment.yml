apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
  labels:
    app: kafka-broker
spec:
  replicas: 
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - env:        
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_LISTENERS
            value: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
          - name: KAFKA_ADVERTISED_LISTENERS
            value: INSIDE://kafka-broker:9093,OUTSIDE://$(KAFKA_SERVICE_SERVICE_HOST):9092
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INSIDE
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: $(ZOOKEEPER1_SERVICE_SERVICE_HOST),$(ZOOKEEPER2_SERVICE_SERVICE_HOST),$(ZOOKEEPER3_SERVICE_SERVICE_HOST)
          - name: KAFKA_CREATE_TOPICS
            value: BlockAdded:1:1,DeployAccepted:1:1,DeployProcessed:1:1,DeployExpired:1:1,Fault:1:1,Step:1:1,Shutdown:1:1,FinalitySignature:1:1
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        name: kafka-broker
        volumeMounts:
        - mountPath: /mnt
          name: kafka-volume
          readOnly: false
      volumes:
      - name: kafka-volume
        persistentVolumeClaim:
          claimName: kafka-storage
          readOnly: false