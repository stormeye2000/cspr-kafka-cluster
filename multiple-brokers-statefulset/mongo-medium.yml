
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo-account
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mongo-role
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["deployments"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mongo_role_binding
subjects:
  - kind: ServiceAccount
    name: mongo-account
    namespace: kafka
roleRef:
  kind: ClusterRole
  name: mongo-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-audit-service
  namespace: kafka
  labels:
    name: mongo-audit-service
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo-audit
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-audit
  namespace: kafka
spec:
  serviceName: mongo-audit-service
  replicas: 2
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: mongo-audit
  template:
    metadata:
      labels:
        app: mongo-audit
        selector: mongo-audit
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccount: mongo-account
      containers:
        - name: mongodb
          image: docker.io/mongo:6
#          env:
#          command: ["/bin/sh"]
#          args: ["-c", "mongod --replSet=rs0 --bind_ip_all"]
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - >
                    if [ "$HOSTNAME" = "mongo-audit-1" ]; then
                      echo 'rs.initiate(
                            {
                              _id: "rs0",
                              version: 1,
                              members: [
                                { _id: 0, host : "mongo-audit-1.mongo-audit-service:27017" },
                                { _id: 1, host : "mongo-audit-0.mongo-audit-service:27017" }
                              ]
                            }
                          )' > rs.js
                      exec mongod --replSet=rs0 --bind_ip_all
                    fi;
          resources:
            requests:
              cpu: 0.5
              memory: 500Mi
          ports:
            - name: mongo-port
              containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db

  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "fast"
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 30Gi

